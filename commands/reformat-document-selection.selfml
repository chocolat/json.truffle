(trigger
    (key [[ctrl][shift]H]))

(name [Reformat Document / Selection])

(only-in source.json)

(input selection)

(output replace-selected)

(save nothing)

(script `#!/usr/bin/env ruby
require 'strscan'

def indent
  " " * $indent * 4
end

s = StringScanner.new(STDIN.read)
brace_stack = []
comma_needed = false
first_line = true
$indent = 0
until s.eos?
  if s.scan(/\{/m)
    if comma_needed then puts "," else puts end
    comma_needed = false
    print indent + "{"
    first_line = false
    $indent += 1
    brace_stack.push "{"
  elsif s.scan(/\}/m)
    $indent -= 1
    print "\n" + indent + "}"
    if (b = brace_stack.pop) != "{"
      puts "Expected '}' (#{brace_stack.inspect} / #{b})"
      exit -1
    end
  elsif s.scan(/\[/m)
    if comma_needed then puts "," else puts end
    comma_needed = false
    print indent + "["
    $indent += 1
    brace_stack.push "["
  elsif s.scan(/\]/m)
    $indent -= 1
    print "\n" + indent + "]"
    if (b = brace_stack.pop) != "["
      puts "Expected ']' (#{brace_stack.inspect} / #{b})"
      exit -2
    end
  elsif s.scan(/,/m)
    comma_needed = true
    #print "==#{brace_stack.inspect}=="
    #puts (brace_stack.last == "{" ? "" : indent) + ","
  else
    if comma_needed then puts "," else puts end
    comma_needed = false
    print indent + s.scan(/[^{}\[\],]+/m)
  end
end`)